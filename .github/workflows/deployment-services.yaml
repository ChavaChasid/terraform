name: 🚀 Build and deploy to Azure-Function-App

# on:
#   workflow_dispatch:
#     inputs:
#       branchName:
#         description: "branch name"
#         required: true
#       deploy:
#         type: choice
#         description: deploy directories to function apps
#         options:
#           - only_changed_directories
#           - all

# env:
#   WORKING_DIR: services

# permissions:
#   contents: read
#   packages: write
#   actions: read

# jobs:
#   setup:
#     runs-on: "ubuntu-latest"
#     outputs:
#       MATRIX: ${{ env.DIRS }}

#     steps:
#       - name: 📂 Checkout repository
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#           ref: ${{ github.event.inputs.branchName }}

#       - name: 📝 list sub-directories
#         id: sub-directories
#         run: echo "DIRS=$(ls -d services/*/* | jq --raw-input --slurp --compact-output 'split("\n")[:-1]')" >> $GITHUB_ENV
#         if: inputs.deploy  == 'all'

#       - name: 🔍 get previous deployment success commit
#         id: previous-success-deployment
#         uses: SamhammerAG/last-successful-build-action@v4
#         with:  
#           token: "${{ secrets.GITHUB_TOKEN }}"
#           branch: "main"
#           workflow: "${{ github.workflow }}"
#         if: inputs.deploy == 'only_changed_directories'

#       - name: 📝 Get changed directories
#         id: changed-directories
#         uses: tj-actions/changed-files@v42
#         with:
#           base_sha: ${{ steps.previous-success-deployment.outputs.sha }}
#           json: true
#           files: "${{ env.WORKING_DIR }}/*/"
#           dir_names: true
#           dir_names_max_depth: 3
#           escape_json: false
#         if: inputs.deploy == 'only_changed_directories'

#       - name: ♻️ Set correct environment
#         run: echo "DIRS=${{ toJson(steps.changed-directories.outputs.all_changed_files) }}" >> $GITHUB_ENV
#         if: inputs.deploy == 'only_changed_directories'

#       - name: 🛠️ Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#   build-and-deploy:
#     runs-on: "ubuntu-latest"
#     needs: setup
#     if: ${{ needs.setup.outputs.MATRIX != '[]' }}
#     strategy:
#       matrix:
#         directory: ${{ fromJson(needs.setup.outputs.MATRIX) }}

#     steps:
#       - name: 📂 Checkout repository
#         uses: actions/checkout@v4
#         with:
#           ref: ${{ github.event.inputs.branchName }}

#       - name: 🔑 Login to Azure
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}

#       - name: 🗝️ Login to Container Registry
#         uses: azure/docker-login@v1
#         with:
#           login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
#           username: ${{ secrets.AZ_USERNAME }}
#           password: ${{ secrets.AZ_PASSWORD }}

#       - name: 🧰 Check and copy necessary files
#         run: |
#           REQUIRED_FILES=(".funcignore" "host.json" "Dockerfile" ".dockerignore" )
#           for file in "${REQUIRED_FILES[@]}"; do
#             cp "./${{ env.WORKING_DIR }}/${file}" "${{ matrix.directory }}/"
#           done

#       - name: 🔄 Extract Last Directory Level
#         id: get-last-level
#         run: |
#           LAST_LEVEL=$(echo ${{ matrix.directory }} | xargs -n 1 basename)
#           echo "LAST_LEVEL=$LAST_LEVEL" >> "$GITHUB_ENV"

#       - name: 🚚 Change Path Matrix Directory
#         run: |
#           CUSTOM_MATRIX_DIRECTORY=$(echo "${{ matrix.directory }}" | sed 's/\//./g')
#           echo "CUSTOM_MATRIX_DIRECTORY=$CUSTOM_MATRIX_DIRECTORY" >> "$GITHUB_ENV"

#       - name: 👷 Import Function App Version
#         run: |
#           version=$(python -c "import ${{ env.CUSTOM_MATRIX_DIRECTORY }}.project; print(${{ env.CUSTOM_MATRIX_DIRECTORY }}.project.__version__)")
#           echo "TAG=$version" >> "$GITHUB_ENV"  

#       - name: 🏗️ Build and push Docker image to Azure Container Registry
#         run: |
#           az acr build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ matrix.directory }}:${{ env.TAG }} -r ${{ secrets.REGISTRY_LOGIN_SERVER }} ./${{ matrix.directory }}
